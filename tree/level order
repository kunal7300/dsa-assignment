   vector<vector<int>> levelOrder(TreeNode* root) {
        
            vector<vector<int>> ans;

    if (!root)
        return ans;

    queue<TreeNode*> q;
    q.push(root);

    while (!q.empty()) {
        int size = q.size();
        vector<int> level;

        for (int i = 0; i < size; ++i) {
            TreeNode* curr = q.front();
            q.pop();

            level.push_back(curr->val);

            if (curr->left)
                q.push(curr->left);  // left first

            if (curr->right)
                q.push(curr->right); // then right
        }

        ans.push_back(level); // add current level to result
    }

    return ans;
    }
t.c=o(n)
s.c=o(1)
